using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data.Common;
using System.IO;

namespace LightREST
{
	//
	// PetaPoco to SQL Class for table Badges
	// generated by DbViewSharp http://dbviewsharp.codeplex.com
	// 
	// Note the attributes are probably not all necessary as the table was designed
	// to be ORM-friendly. However they are included as a hint for how to use them
	// when creating an object mapping to a legacy table.
	// See Petapoco documentation for more help. http://www.toptensoftware.com/petapoco/
	// the class is partial so you can implement other behaviours separate from the Petapoco 
	// requirements.
	// Note: the Id type must be Int64 for self-generating keys in Sqlite.
	// 
	[PetaPoco.TableName("Badges")]
	[PetaPoco.PrimaryKey("Id")]
	public partial class Badge
	{
		[PetaPoco.Column("Id")]
		public Int64 Id { get; set; }
		[PetaPoco.Column("Title")]
		public String Title { get; set; }
		[PetaPoco.Column("Description")]
		public String Description { get; set; }
		[PetaPoco.Column("Level")]
		public Int32? Level { get; set; }
	}

	// Class to handle persisting badge details to the database.
	public class BadgeContext
	{
		internal IList<Badge> Get(int top, int from, string filter)
		{
			// TODO: acknowledge parameter values.
			String sql = "select * from Badges order by Id";
			return BadgeContext.GetDatabase().Query<Badge>(sql).ToList();
		}
		
		public Badge GetById(int id)
		{
			String sql = "select * from Badges where Id =" + id.ToString();
			return BadgeContext.GetDatabase().FirstOrDefault<Badge>(sql);
		}

		public void Add(Badge badge)
		{
			BadgeContext.GetDatabase().Insert(badge);
		}

		internal void update(Badge badge)
		{
			BadgeContext.GetDatabase().Update(badge);
		}
		internal void delete(Badge badge)
		{
			BadgeContext.GetDatabase().Delete(badge);
		}

		private static PetaPoco.Database GetDatabase()
		{
			// A sqlite database is just a file.
			String fileName = Path.Combine(Environment.GetFolderPath(System.Environment.SpecialFolder.MyDocuments), "badges.db");
			String connectionString = "Data Source=" + fileName;
			DbProviderFactory sqlFactory = new System.Data.SQLite.SQLiteFactory();
			PetaPoco.Database db = new PetaPoco.Database(connectionString, sqlFactory);
			return db;
		}



	}
}

